Cherokee Web Server
===================

Web site
--------
  http://www.cherokee-project.com/


License
-------
  Cherokee is released under GPL v2. Read the COPYING file for more
  information.


Mailing lists
-------------
  There are a few mailing lists available. Please, do not hesitate to
  subscribe to any on them:

    http://lists.cherokee-project.com/

  This is the main mailing list, where questions are sent and general
  discussion takes place.

  There are also a few technical mailing lists. Developers and package
  maintainers usually subscribe to these mailing lists as well:

    http://lists.cherokee-project.com/listinfo/cherokee-dev
    http://lists.cherokee-project.com/listinfo/cherokee-commits

  The mailing lists' archives are available at:

    http://lists.cherokee-project.com/pipermail/cherokee/


IRC channel
-----------
  irc.freenode.net, channel #cherokee


Building from a tar.gz file
---------------------------
  Run ./configure, with some options if you wish. The standard options
  are documented in the INSTALL file.  The only interesting ones are
  the usual --prefix=/usr, --localstatedir=/var and --sysconfdir=/etc

  Do "make", and then do "make install" (possibly as root if the
  destination permissions require that).

  That's all.


Building from the repository
----------------------------
  Check out the code from Github, using e.g.

    git clone http://github.com/cherokee/webserver.git

  cd into the source directory and run ./autogen.sh to setup the
  environment (you need the standard autoconf tools to do so).

  Then, continue with the following instructions...


FAQ
---
   Here is a list of the most frequently asked questions:

  How to compile it
  ------------------
   ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var
   make

  How to create dynamic modules
  -----------------------------
   It's the default way.

  How to configure the module xyz to be linked statically
  -------------------------------------------------------
   ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --enable-static-module=xyz

  How to build everyhing statically
  ---------------------------------
   ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --enable-static-module=all

  How to create a self signed certificate for TLS
  -----------------------------------------------
    openssl req -days 1000 -new -x509 -nodes -out /etc/cherokee/ssl/cherokee.pem -keyout /etc/cherokee/ssl/cherokee.pem

  How to compile it on Windows
  ----------------------------
   ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --enable-static-module=all --enable-static --enable-shared=no --enable-beta --enable-trace

  How to build a MacOS X binary package
  -----------------------------------
   ./autogen.sh --prefix=/usr/local --with-wwwroot=/Library/WebServer/Documents --with-wwwuser=www --with-wwwgroup=www --with-mysql=no --with-ffmpeg=no --with-ldap=no --enable-beta
   make -j8
   packages/osx/build.py

  Development
  -----------
   ./autogen.sh --prefix=/usr --sysconfdir=/etc --localstatedir=/var --enable-static-module=all --enable-static --enable-shared=no --with-mysql=no --with-ffmpeg=no --with-ldap=no --enable-beta --enable-trace --enable-backtraces --enable-maintainer-mode
   make CFLAGS="-ggdb3 -O0" -j8

  How to cross compile the Win32 version
  --------------------------------------
   From Linux: http://alobbs.com/news/1201
   From MacOS: http://alobbs.com/news/1299
   From Win32: http://unixwars.com/2008/07/17/c/

--
Alvaro Lopez Ortega
alvaro@alobbs.com
